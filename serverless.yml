service: melvin-alexa-intent-handlers

frameworkVersion: ">=1.4.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs10.x
  stage: ${self:custom.stage}
  region: eu-west-1
  memorySize: 2048
  tracing:
    lambda: true
    apiGateway: true
  environment: ${self:custom.config.environment}
  timeout: 30
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameter
      Resource: "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/${self:service}/{self:provider.stage}/*"

    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_USER_UTTERANCE}"

    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_USER_SESSION}"

    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_USER_UTTERANCE}/index/GlobalCreatedAtIndex"

functions:
  alexa-skill:
    handler: src/alexa-skill.handler
    events:
      - alexaSkill:
          appId: ${self:custom.config.alexa.appId}
          enabled: true

plugins:
  - serverless-plugin-aws-alerts
  - serverless-plugin-include-dependencies
  - serverless-prune-plugin
  - serverless-pseudo-parameters

package:
  exclude:
    - .vscode/**
  excludeDevDependencies: false

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, 'dev'}

  # Load our configuration file specific to the environment based on the stage parameter
  config: ${file(config/${self:custom.stage}.yml)}

  # This will delete all but the n-most recent versions of each function deployed.
  prune:
    automatic: true
    includeLayers: true
    number: 3
